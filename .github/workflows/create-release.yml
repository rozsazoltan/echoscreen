name: Release All OS - No Code Signing

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-release:
    name: Create GitHub Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version from input
        id: vars
        run: echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT

      - name: Extract changelog link
        id: changelog
        run: |
          VERSION=${{ steps.vars.outputs.version }}
          LINK="https://github.com/${{ github.repository }}/blob/${{ inputs.version }}/CHANGELOG.md#v${VERSION}"
          echo "link=$LINK" >> $GITHUB_OUTPUT

      - name: Create GitHub Draft Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.vars.outputs.version }}
          name: ${{ steps.vars.outputs.version }}
          draft: true
          prerelease: false
          body: |
            See the changes in [CHANGELOG.md](${{ steps.changelog.outputs.link }})
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: EchoScreen Multi-Platform Build
    runs-on: ${{ matrix.os }}
    needs: create-release

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: 'release/*.{AppImage,rpm,deb,yml}'
          - os: windows-latest
            artifact_name: 'release/*.{msi,exe,blockmap,yml}'
          - os: macos-latest
            artifact_name: 'release/*.{dmg,blockmap,yml}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Get yarn cache directory path (cross-platform)
        id: yarn-cache-dir-path
        run: |
          yarn_dir=$(yarn cache dir)
          echo "dir=$yarn_dir" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Cache yarn dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-

      - name: Install dependencies (app/client)
        run: |
          cd ./app/client
          yarn install --frozen-lockfile

      - name: Install dependencies (root)
        run: yarn install --frozen-lockfile

      - name: Install dependencies (app)
        run: |
          cd ./app
          yarn install --frozen-lockfile

      - name: Build project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build

      - name: Package App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn package-ci

      - name: Collect artifact files list
        id: collect_files
        run: |
          shopt -s nullglob
          files=(${{ matrix.artifact_name }})
          if [ ${#files[@]} -eq 0 ]; then
            echo "No files found matching pattern '${{ matrix.artifact_name }}'"
            echo "files="
          else
            echo "Found files:"
            for f in "${files[@]}"; do
              echo " - $f"
            done
            echo "files=${files[*]}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Upload binaries to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.vars.outputs.version }}
          files: ${{ steps.collect_files.outputs.files }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
