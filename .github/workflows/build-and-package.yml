name: Build and Package

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-and-package:
    name: EchoScreen Multi-Platform Build
    runs-on: ${{ matrix.os }}

    strategy:
      include:
        - os: ubuntu-latest
          artifact_patterns: release/*.AppImage release/*.rpm release/*.deb release/*.yml
        - os: windows-latest
          artifact_patterns: release/*.msi release/*.exe release/*.blockmap release/*.yml
        - os: macos-latest
          artifact_patterns: release/*.dmg release/*.blockmap release/*.yml

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Get yarn cache directory path (cross-platform)
        id: yarn-cache-dir-path
        run: |
          yarn_dir=$(yarn cache dir)
          echo "dir=$yarn_dir" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Cache yarn dependencies
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-

      - name: Install dependencies (app/client)
        run: |
          cd ./app/client
          yarn install --frozen-lockfile

      - name: Install dependencies (root)
        run: yarn install --frozen-lockfile

      - name: Install dependencies (app)
        run: |
          cd ./app
          yarn install --frozen-lockfile

      - name: Build project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build

      - name: Package App
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn package-ci

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          draft: true
          files: ${{ matrix.artifact_patterns }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
