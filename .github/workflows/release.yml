on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.2.3)'
        required: true
        type: string

permissions:
  contents: write

name: release all os -- no code signing

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          draft: true
          prerelease: false

  release:
    name: EchoScreen Release
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: 'release/{*.AppImage,*.rpm,*.deb,*.yml}'
          - os: windows-2019
            artifact_name: 'release/{*.msi,*.exe,*.blockmap,*.yml}'
          - os: macos-latest
            artifact_name: 'release/{*.dmg,*.blockmap,*.yml}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-

      - name: yarn install in ./app/client
        run: |
          cd ./app/client
          yarn install --frozen-lockfile

      - name: yarn install in ./ (root)
        run: yarn install --frozen-lockfile

      - name: yarn install in ./app
        run: |
          cd ./app
          yarn install --frozen-lockfile

      - name: yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build

      - name: yarn package-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn package-ci

      - name: Upload binaries to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ matrix.artifact_name }}
          tags: true
          draft: true
