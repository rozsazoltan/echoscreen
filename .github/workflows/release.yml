on: 
  push: 
    tags:
      - "v*"

name: release all os -- no code signing

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Deskreen Release ${{ github.ref }}
          draft: true
          prerelease: false

  release:
    name: Deskreen Release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: 'release/{*.AppImage,*.rpm,*.deb,*.yml}'
          - os: windows-2019
            artifact_name: 'release/{*.msi,*.exe,*.blockmap,*.yml}'
          - os: macos-latest
            artifact_name: 'release/{*.dmg,*.blockmap,*.yml}'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: '16'
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: actions/cache@v2.1.3
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ matrix.os }}-yarn-
      - name: yarn install in ./app/client
        run: |
          cd ./app/client
          yarn install --frozen-lockfile
      - name: yarn install in ./
        run: yarn install --frozen-lockfile
      - name: yarn install in ./app
        run: |
          cd ./app
          yarn install --frozen-lockfile
      - name: yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: yarn build
      - name: yarn lint
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: yarn lint
      - name: yarn tsc
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: yarn tsc
      - name: yarn package-ci
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: yarn package-ci
      - name: Upload binaries to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          file: ${{ matrix.artifact_name }}
          tags: true
          draft: true
