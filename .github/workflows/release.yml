on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write

name: release all os -- no code signing

jobs:
  create-release:
    # https://stackoverflow.com/questions/70959954/error-waiting-for-a-runner-to-pick-up-this-job-using-github-actions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  release:
    name: EchoScreen Release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # https://stackoverflow.com/questions/70959954/error-waiting-for-a-runner-to-pick-up-this-job-using-github-actions
          - os: ubuntu-latest
            artifact_name: 'release/{*.AppImage,*.rpm,*.deb,*.yml}'
          - os: windows-2019
            artifact_name: 'release/{*.msi,*.exe,*.blockmap,*.yml}'
          - os: macos-latest
            artifact_name: 'release/{*.dmg,*.blockmap,*.yml}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-yarn-

      - name: yarn install in ./app/client
        run: |
          cd ./app/client
          yarn install --frozen-lockfile

      - name: yarn install in ./
        run: yarn install --frozen-lockfile

      - name: yarn install in ./app
        run: |
          cd ./app
          yarn install --frozen-lockfile

      - name: yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn build

      # - name: yarn lint
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: yarn lint

      # - name: yarn tsc
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: yarn tsc

      # - name: yarn test
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: yarn test

      # - name: yarn build-ux
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: yarn build-ux

      # - name: yarn test-ux
      #   uses: GabrielBB/xvfb-action@v1.2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     run: yarn test-ux

      - name: yarn package-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn package-ci
      # TODO: add windows32 build step

      - name: Upload binaries to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ matrix.artifact_name }}
          tags: true
          draft: true
